{"ast":null,"code":"import _asyncToGenerator from \"/home/fernando/Documents/completo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ProductoLocal } from '../../modelo/productolocal.class';\nimport { localactivo } from '../../login/login-main/services/login.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GestionDistribuidorService {\n  constructor(http) {\n    this.http = http;\n    this.productoslocal = [];\n    this.http.get('http://127.0.0.1:8080/api/productolocal').subscribe(resp => {\n      console.log(resp);\n      this.productoslocal = resp;\n    });\n  }\n\n  get getproductofaltantes() {\n    const productoslocalfaltante = [];\n    const productosenlocal = this.productoslocal.filter(element => element.tieneLocal == localactivo[0]);\n    const productosfaltantes = [];\n    let result = [];\n    productosenlocal.forEach(element => {\n      productosfaltantes.push(element.getproducto);\n    });\n    result = productoslocalfaltante.filter(el => !productosfaltantes.includes(el));\n    return result;\n  }\n\n  agregar(producto, precio) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let productolocal = new ProductoLocal(0, precio, localactivo[0], producto);\n\n      const promesa = _this.http.post('http://127.0.0.1:8080/api/productolocal', productolocal).toPromise();\n\n      return promesa.then(value => {\n        return true;\n      });\n    })();\n  }\n\n}\n\nGestionDistribuidorService.ɵfac = function GestionDistribuidorService_Factory(t) {\n  return new (t || GestionDistribuidorService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nGestionDistribuidorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GestionDistribuidorService,\n  factory: GestionDistribuidorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/fernando/Documents/completo/src/app/gestion-distribuidor/service/gestion-distribuidor.service.ts"],"names":[],"mappings":";AACA,SAAS,aAAT,QAA8B,kCAA9B;AAEA,SAAS,WAAT,QAA4B,+CAA5B;;;AAOA,OAAM,MAAO,0BAAP,CAAiC;AAErC,EAAA,WAAA,CAAoB,IAApB,EAAmC;AAAf,SAAA,IAAA,GAAA,IAAA;AAIb,SAAA,cAAA,GAAiC,EAAjC;AAHL,SAAK,IAAL,CAAU,GAAV,CAA6B,yCAA7B,EAAwE,SAAxE,CAAmF,IAAD,IAAY;AAAC,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AAAkB,WAAK,cAAL,GAAoB,IAApB;AAA0B,KAA3I;AACA;;AAIsB,MAApB,oBAAoB,GAAA;AACtB,UAAM,sBAAsB,GAAY,EAAxC;AACA,UAAM,gBAAgB,GAAiB,KAAK,cAAL,CAAoB,MAApB,CAA2B,OAAO,IAAE,OAAO,CAAC,UAAR,IAAoB,WAAW,CAAC,CAAD,CAAnE,CAAvC;AACA,UAAM,kBAAkB,GAAY,EAApC;AACA,QAAI,MAAM,GAAY,EAAtB;AACA,IAAA,gBAAgB,CAAC,OAAjB,CAAyB,OAAO,IAAG;AACjC,MAAA,kBAAkB,CAAC,IAAnB,CAAwB,OAAO,CAAC,WAAhC;AACD,KAFD;AAGA,IAAA,MAAM,GAAG,sBAAsB,CAAC,MAAvB,CAA8B,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAnB,CAA4B,EAA5B,CAArC,CAAT;AACA,WAAO,MAAP;AACD;;AAIK,EAAA,OAAO,CAAC,QAAD,EAAmB,MAAnB,EAAgC;AAAA;;AAAA;AAC3C,UAAI,aAAa,GAAiB,IAAI,aAAJ,CAAkB,CAAlB,EAAoB,MAApB,EAA2B,WAAW,CAAC,CAAD,CAAtC,EAA0C,QAA1C,CAAlC;;AACA,YAAM,OAAO,GAAE,KAAI,CAAC,IAAL,CAAU,IAAV,CAAoB,yCAApB,EAA8D,aAA9D,EAA6E,SAA7E,EAAf;;AACA,aAAO,OAAO,CAAC,IAAR,CAAa,KAAK,IAAE;AAAC,eAAO,IAAP;AAAY,OAAjC,CAAP;AAH2C;AAI5C;;AA1BoC;;;mBAA1B,0B,EAA0B,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAA1B,0B;AAA0B,EAAA,OAAA,EAA1B,0BAA0B,CAAA,I;AAAA,EAAA,UAAA,EAFzB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ProductoLocal } from '../../modelo/productolocal.class';\nimport { Producto } from '../../modelo/producto.class';\nimport { localactivo } from '../../login/login-main/services/login.service';\nimport {HttpClient} from \"@angular/common/http\"\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GestionDistribuidorService {\n\n  constructor(private http:HttpClient) {\n    this.http.get<ProductoLocal>('http://127.0.0.1:8080/api/productolocal').subscribe((resp:any)=>{console.log(resp);this.productoslocal=resp;});\n   }\n  \n  public productoslocal:ProductoLocal[] = []\n\n  get getproductofaltantes(){\n    const productoslocalfaltante:Producto[]=[]\n    const productosenlocal:ProductoLocal[]=this.productoslocal.filter(element=>element.tieneLocal==localactivo[0])\n    const productosfaltantes:Producto[]=[]\n    let result:Producto[]=[]\n    productosenlocal.forEach(element => {\n      productosfaltantes.push(element.getproducto)\n    });\n    result = productoslocalfaltante.filter(el => !productosfaltantes.includes(el))\n    return result\n  }\n  \n\n\n  async agregar(producto:Producto,precio:number){\n    let productolocal:ProductoLocal = new ProductoLocal(0,precio,localactivo[0],producto)\n    const promesa= this.http.post<any>('http://127.0.0.1:8080/api/productolocal',productolocal).toPromise();\n    return promesa.then(value=>{return true});\n  }\n  \n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}