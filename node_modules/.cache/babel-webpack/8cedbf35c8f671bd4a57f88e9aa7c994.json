{"ast":null,"code":"import _asyncToGenerator from \"/home/fernando/Documents/completo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GestionMarcaservice {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://127.0.0.1:8080/api/marca\";\n    this.listar = [];\n  }\n\n  listarMarca() {\n    this.http.get(this.baseUrl).subscribe(resp => {\n      this.listar = resp;\n    });\n  }\n\n  agregarmarcaa(marca) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const promesa = _this.http.post(_this.baseUrl, marca).toPromise();\n\n      return promesa.then(value => {\n        return true;\n      });\n    })();\n  }\n\n  eliminarmarcaa(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const promesa = _this2.http.delete(_this2.baseUrl + '/' + id).toPromise();\n\n      return promesa.then(value => {\n        return true;\n      });\n    })();\n  }\n\n  atualizarmarcaa(id, marca) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const promesa = _this3.http.put(_this3.baseUrl + '/' + id, marca).toPromise();\n\n      return promesa.then(value => {\n        return true;\n      });\n    })();\n  }\n\n}\n\nGestionMarcaservice.ɵfac = function GestionMarcaservice_Factory(t) {\n  return new (t || GestionMarcaservice)(i0.ɵɵinject(i1.HttpClient));\n};\n\nGestionMarcaservice.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GestionMarcaservice,\n  factory: GestionMarcaservice.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/fernando/Documents/completo/src/app/gestion/gestion-marca-main/services/gestion-marca.service.ts"],"names":[],"mappings":";;;AAQA,OAAM,MAAO,mBAAP,CAA0B;AAI5B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAFZ,SAAA,OAAA,GAAU,iCAAV;AAID,SAAA,MAAA,GAAkB,EAAlB;AAFgC;;AAIvC,EAAA,WAAW,GAAA;AACP,SAAK,IAAL,CAAU,GAAV,CAAuB,KAAK,OAA5B,EACC,SADD,CACW,IAAI,IAAG;AACd,WAAK,MAAL,GAAc,IAAd;AACH,KAHD;AAIH;;AAIK,EAAA,aAAa,CAAC,KAAD,EAAa;AAAA;;AAAA;AAC5B,YAAM,OAAO,GAAG,KAAI,CAAC,IAAL,CAAU,IAAV,CAAoB,KAAI,CAAC,OAAzB,EAAiC,KAAjC,EAAwC,SAAxC,EAAhB;;AACA,aAAO,OAAO,CAAC,IAAR,CAAa,KAAK,IAAG;AAAC,eAAO,IAAP;AAAY,OAAlC,CAAP;AAF4B;AAG/B;;AAEK,EAAA,cAAc,CAAC,EAAD,EAAW;AAAA;;AAAA;AAC3B,YAAM,OAAO,GAAG,MAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,MAAI,CAAC,OAAL,GAAa,GAAb,GAAiB,EAAlC,EAAsC,SAAtC,EAAhB;;AACA,aAAO,OAAO,CAAC,IAAR,CAAa,KAAK,IAAG;AAAE,eAAO,IAAP;AAAY,OAAnC,CAAP;AAF2B;AAG9B;;AAEK,EAAA,eAAe,CAAC,EAAD,EAAa,KAAb,EAAyB;AAAA;;AAAA;AAC1C,YAAM,OAAO,GAAG,MAAI,CAAC,IAAL,CAAU,GAAV,CAAmB,MAAI,CAAC,OAAL,GAAa,GAAb,GAAiB,EAApC,EAAwC,KAAxC,EAA+C,SAA/C,EAAhB;;AACA,aAAO,OAAO,CAAC,IAAR,CAAa,KAAK,IAAG;AAAE,eAAO,IAAP;AAAY,OAAnC,CAAP;AAF0C;AAG7C;;AA9B2B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAnB,mB;AAAmB,EAAA,OAAA,EAAnB,mBAAmB,CAAA,I;AAAA,EAAA,UAAA,EAFhB","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\"\nimport { Marca} from '../../../modelo/marca.class';\nimport { Observable, Subscription } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GestionMarcaservice{\n\n    private baseUrl = \"http://127.0.0.1:8080/api/marca\"\n\n    constructor(private http: HttpClient){}\n\n    public listar: Marca[] = []\n\n    listarMarca(){\n        this.http.get<Marca[]>(this.baseUrl)\n        .subscribe(resp => {\n            this.listar = resp\n        })\n    }\n\n\n\n    async agregarmarcaa(marca: Marca){\n        const promesa = this.http.post<any>(this.baseUrl,marca).toPromise();\n        return promesa.then(value =>{return true});\n    }\n\n    async eliminarmarcaa(id: number){\n        const promesa = this.http.delete(this.baseUrl+'/'+id).toPromise();\n        return promesa.then(value => {return true});\n    }\n\n    async atualizarmarcaa(id: number, marca: Marca){\n        const promesa = this.http.put<any>(this.baseUrl+'/'+id, marca).toPromise();\n        return promesa.then(value => {return true})\n    }\n\n   \n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}