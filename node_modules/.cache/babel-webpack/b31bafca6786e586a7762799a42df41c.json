{"ast":null,"code":"import _asyncToGenerator from \"/home/fernando/Documents/completo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class ServiciosService {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n    this.reservass = [];\n    this.usuarioactivo = localStorage.getItem(\"usuarioactivo\");\n    this.localactivo = localStorage.getItem(\"localactivo\");\n  }\n\n  get getlistareservas() {\n    if (localStorage.getItem(\"usuarioactivo\") != '') {\n      let promesa = this.http.get(\"http://localhost:8080/api/reservausuarioactivas\" + \"/\" + localStorage.getItem(\"usuarioactivo\")).toPromise().then(resp => this.reservass = resp);\n      return this.reservass;\n    } else {\n      let promesa = this.http.get(\"http://localhost:8080/api/reservalocalactivas\" + \"/\" + localStorage.getItem(\"localactivo\")).toPromise().then(resp => this.reservass = resp);\n      console.log(this.reservass);\n      return this.reservass;\n    }\n  }\n\n  eliminar(codReserva) {\n    const promesa = this.http.delete('http://127.0.0.1:8080/api/reserva' + '/' + codReserva).toPromise().then(any => this.getlistareservas);\n    return promesa.then(value => {\n      return true;\n    });\n  } // }\n\n\n  vista(codReserva) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      localStorage.setItem(\"reservaactiva\", codReserva.toString());\n\n      _this.route.navigate(['descripcion-boleta']);\n    })();\n  }\n\n}\n\nServiciosService.ɵfac = function ServiciosService_Factory(t) {\n  return new (t || ServiciosService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\n\nServiciosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiciosService,\n  factory: ServiciosService.ɵfac,\n  providedIn: 'root'\n});\nexport const reservaactiva = [];","map":{"version":3,"sources":["/home/fernando/Documents/completo/src/app/entrega-pedidos/servicios.service.ts"],"names":[],"mappings":";;;;AAUA,OAAM,MAAO,gBAAP,CAAuB;AAG3B,EAAA,WAAA,CAAoB,KAApB,EACQ,IADR,EACuB;AADH,SAAA,KAAA,GAAA,KAAA;AACZ,SAAA,IAAA,GAAA,IAAA;AAGR,SAAA,SAAA,GAAoB,EAApB;AACA,SAAA,aAAA,GAAc,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAd;AACA,SAAA,WAAA,GAAY,YAAY,CAAC,OAAb,CAAqB,aAArB,CAAZ;AAHC;;AAImB,MAAhB,gBAAgB,GAAA;AAClB,QAAG,YAAY,CAAC,OAAb,CAAqB,eAArB,KAAuC,EAA1C,EAA6C;AAC3C,UAAI,OAAO,GAAG,KAAK,IAAL,CAAU,GAAV,CAAyB,oDAAkD,GAAlD,GAAsD,YAAY,CAAC,OAAb,CAAqB,eAArB,CAA/E,EAAsH,SAAtH,GAAkI,IAAlI,CAAuI,IAAI,IAAE,KAAK,SAAL,GAAe,IAA5J,CAAd;AACA,aAAO,KAAK,SAAZ;AAEF,KAJA,MAII;AACF,UAAI,OAAO,GAAG,KAAK,IAAL,CAAU,GAAV,CAAyB,kDAAgD,GAAhD,GAAoD,YAAY,CAAC,OAAb,CAAqB,aAArB,CAA7E,EAAkH,SAAlH,GAA8H,IAA9H,CAAmI,IAAI,IAAE,KAAK,SAAL,GAAe,IAAxJ,CAAd;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAjB;AACA,aAAO,KAAK,SAAZ;AAGD;AAEF;;AAED,EAAA,QAAQ,CAAC,UAAD,EAAkB;AACxB,UAAM,OAAO,GAAE,KAAK,IAAL,CAAU,MAAV,CAAsB,sCAAsC,GAAtC,GAA4C,UAAlE,EAA8E,SAA9E,GAA0F,IAA1F,CAA+F,GAAG,IAAE,KAAK,gBAAzG,CAAf;AACA,WAAO,OAAO,CAAC,IAAR,CAAa,KAAK,IAAG;AAAC,aAAO,IAAP;AAAY,KAAlC,CAAP;AACC,GA5BwB,CA8B3B;;;AAIO,EAAA,KAAK,CAAC,UAAD,EAAkB;AAAA;;AAAA;AAC5B,MAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,UAAU,CAAC,QAAX,EAArC;;AACA,MAAA,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,CAAC,oBAAD,CAApB;AAF4B;AAI9B;;AAtC2B;;;mBAAhB,gB,EAAgB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAhB,gB;AAAgB,EAAA,OAAA,EAAhB,gBAAgB,CAAA,I;AAAA,EAAA,UAAA,EAFf;;AA0Cb,OAAO,MAAM,aAAa,GAAW,EAA9B","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Reserva} from '../modelo/reserva.class';\nimport { usuarioactivo, localactivo } from '../login/login-main/services/login.service';\nimport { Usuario } from '../modelo/usuario.class';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiciosService {\n\n\n  constructor(private route:Router,\n  private http:HttpClient) { \n    \n  }\n  reservass:Reserva[]=[]\n  usuarioactivo=localStorage.getItem(\"usuarioactivo\")\n  localactivo=localStorage.getItem(\"localactivo\")\n  get getlistareservas(){\n    if(localStorage.getItem(\"usuarioactivo\")!=''){\n      let promesa = this.http.get<Reserva[]>(\"http://localhost:8080/api/reservausuarioactivas\"+\"/\"+localStorage.getItem(\"usuarioactivo\")).toPromise().then(resp=>this.reservass=resp);\n      return this.reservass;\n     \n   }else{\n      let promesa = this.http.get<Reserva[]>(\"http://localhost:8080/api/reservalocalactivas\"+\"/\"+localStorage.getItem(\"localactivo\")).toPromise().then(resp=>this.reservass=resp);\n      console.log(this.reservass)\n      return this.reservass;\n\n      \n    }\n    \n  }\n\n  eliminar(codReserva:number){\n    const promesa= this.http.delete<any>('http://127.0.0.1:8080/api/reserva' + '/' + codReserva).toPromise().then(any=>this.getlistareservas);\n    return promesa.then(value =>{return true});\n    }\n  \n  // }\n  \n   \n\n   async vista(codReserva:number){\n    localStorage.setItem(\"reservaactiva\",codReserva.toString())\n    this.route.navigate(['descripcion-boleta'])\n\n }\n}\n export const reservaactiva:Reserva[]=[]\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}